[build-system]
requires = ["setuptools>=75.1.0", "wheel>=0.44.0", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "mtg-optimizer"
version = "0.1.0"
description = "Optimizer for MTG purchases"
authors = [
    {name = "Jules BeausÃ©jour", email = "jules@example.com"},
]
license = "MIT"
requires-python = ">=3.12"
keywords = ["mtg", "magic-the-gathering", "card-optimization", "price-comparison"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Office/Business :: Financial",
]
dependencies = [
    # Core Web Framework
    "quart>=0.20.0,<0.21.0",
    "quart-cors>=0.8.0,<0.9.0",
    "quart-jwt-extended>=0.1.0,<0.2.0",
    "uvicorn>=0.34.0,<0.35.0",
    "nest-asyncio>=1.6.0,<1.7.0",
    
    # Database & ORM
    "SQLAlchemy>=2.0.40,<2.1.0",
    "asyncmy>=0.2.10,<0.3.0",
    "alembic>=1.13.0,<1.14.0",
    
    # Task Queue & Cache
    "celery[redis]>=5.4.0,<5.5.0",
    "redis[hiredis]>=5.0.1,<5.1.0",
    
    # Web Scraping & HTTP
    "requests>=2.32.0,<2.33.0",
    "aiohttp>=3.9.5,<3.10.0",
    "beautifulsoup4>=4.12.3,<4.13.0",
    "cloudscraper>=1.2.71,<1.3.0",
    "selenium>=4.22.0,<4.23.0",
    "selenium-stealth>=1.0.6,<1.1.0",
    "undetected-chromedriver>=3.5.5,<3.6.0",
    "thefuzz[speedup]>=0.18.0,<0.19.0",
    "htmldom>=2.0,<3.0",
    
    # Optimization & Mathematical Computing
    "deap>=1.4.1,<1.5.0",
    "PuLP>=2.8.0,<2.9.0",
    "pandas>=2.2.0,<2.3.0",
    "numpy>=2.0.0,<2.1.0",
    
    # Utilities & Configuration
    "python-dotenv>=1.0.0,<1.1.0",
    "tenacity>=9.0.0,<9.1.0",
    "colorama>=0.4.6,<0.5.0",
    "pydantic>=2.10.0,<2.11.0",
    "python-Levenshtein>=0.27.0,<0.28.0",
    "psutil>=7.0.0,<8.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/mtg-optimizer"
Repository = "https://github.com/your-username/mtg-optimizer"
Issues = "https://github.com/your-username/mtg-optimizer/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0,<9.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=24.0.0,<25.0.0",
    "isort>=5.13.0,<6.0.0",
    "flake8>=7.0.0,<8.0.0",
    "mypy>=1.8.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    "bandit>=1.7.5,<2.0.0",
    "safety>=3.0.0,<4.0.0",
]

test = [
    "pytest>=8.3.0,<9.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "httpx>=0.27.0,<0.28.0",
    "factory-boy>=3.3.0,<3.4.0",
]

lint = [
    "black>=24.0.0,<25.0.0",
    "isort>=5.13.0,<6.0.0",
    "flake8>=7.0.0,<8.0.0",
    "mypy>=1.8.0,<2.0.0",
    "bandit>=1.7.5,<2.0.0",
]

production = [
    "gunicorn>=21.2.0,<22.0.0",
    "sentry-sdk>=1.40.0,<2.0.0",
]

[tool.black]
line-length = 120
target-version = ["py312"]
skip-string-normalization = false

[tool.setuptools]
packages = ["app"]


[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
ignore = [
    "E203",  # Whitespace before ':', conflicts with black
    "W503",  # Line break before binary operator, conflicts with black
    "E501",  # Line too long (handled by black)
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "migrations",
    "instance",
    "frontend",
    "node_modules",
    "build",
    "static",
    "templates",
    "*.egg-info",
    "dist",
]
max-complexity = 10
select = ["E", "W", "F", "C"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:F401,F811"
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "migrations/",
    "frontend/",
    "node_modules/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "cloudscraper.*",
    "deap.*",
    "pulp.*",
    "htmldom.*",
    "undetected_chromedriver.*",
    "selenium_stealth.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=app --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "app/app.py",  # Entry point
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
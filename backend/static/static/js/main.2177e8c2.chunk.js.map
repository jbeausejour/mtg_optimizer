{"version":3,"sources":["pages/Dashboard.js","components/Optimize.js","components/api.js","components/SiteManagement.js","components/Results.js","App.js","index.js"],"names":["Dashboard","_jsxs","children","_jsx","Row","gutter","Col","span","Card","title","bordered","Optimize","cards","setCards","useState","sites","setSites","selectedCard","setSelectedCard","mtgStockData","setMtgStockData","scryfallData","setScryfallData","isModalVisible","setIsModalVisible","useEffect","fetch","then","response","json","data","catch","error","console","handleCardClick","async","card","concat","cardName","ok","Error","fetchMTGStockData","fetchScryfallData","message","handleModalClose","Button","type","onClick","method","success","List","dataSource","renderItem","Item","site","name","Modal","visible","onCancel","footer","JSON","stringify","SiteManagement","isEditing","setIsEditing","form","Form","useForm","fetchSiteList","map","item","key","id","handleSave","row","headers","body","mergedColumns","dataIndex","editable","col","onCell","record","editing","icon","SaveOutlined","EditOutlined","handleEditMode","rows","validateFields","updatedSites","errInfo","log","saveAll","initialValues","reduce","acc","setFieldsValue","component","Table","components","cell","_ref","restProps","style","margin","rules","required","Input","columns","rowClassName","pagination","Results","results","setResults","result","Header","Content","Footer","Layout","App","Router","className","Menu","theme","mode","defaultSelectedKeys","Link","to","padding","Switch","Route","path","exact","textAlign","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2177e8c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Row, Col } from 'antd';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <Card title=\"Total Sites\" bordered={false}>\r\n            10\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card title=\"Total Cards\" bordered={false}>\r\n            150\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card title=\"Latest Scrape\" bordered={false}>\r\n            2024-06-23\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, message, Row, Col, Card, List, Modal } from 'antd';\r\nimport { fetchMTGStockData, fetchScryfallData } from './api';\r\n\r\nconst Optimize = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [sites, setSites] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [mtgStockData, setMtgStockData] = useState(null);\r\n  const [scryfallData, setScryfallData] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/cards')\r\n      .then(response => response.json())\r\n      .then(data => setCards(data))\r\n      .catch(error => console.error('Error fetching cards:', error));\r\n\r\n    fetch('/api/sites')\r\n      .then(response => response.json())\r\n      .then(data => setSites(data))\r\n      .catch(error => console.error('Error fetching sites:', error));\r\n  }, []);\r\n\r\n  const handleOptimize = async () => {\r\n    try {\r\n      const response = await fetch('/api/optimize', { method: 'POST' });\r\n      const result = await response.json();\r\n      message.success('Optimization completed successfully!');\r\n      // Handle displaying results or storing them in state\r\n    } catch (error) {\r\n      message.error('Optimization failed!');\r\n      console.error('Error during optimization:', error);\r\n    }\r\n  };\r\n\r\n  const handleCardClick = async (card) => {\r\n    setSelectedCard(card);\r\n    try {\r\n      const mtgStockData = await fetchMTGStockData(card.card);\r\n      const scryfallData = await fetchScryfallData(card.card);\r\n      setMtgStockData(mtgStockData);\r\n      setScryfallData(scryfallData);\r\n      setIsModalVisible(true);\r\n    } catch (error) {\r\n      message.error('Error fetching card data');\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalVisible(false);\r\n    setMtgStockData(null);\r\n    setScryfallData(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Optimize</h1>\r\n      <Button type=\"primary\" onClick={handleOptimize}>Run Optimization</Button>\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Card title=\"MTG Card List\">\r\n            <List\r\n              bordered\r\n              dataSource={cards}\r\n              renderItem={card => (\r\n                <List.Item onClick={() => handleCardClick(card)}>\r\n                  {card.card}\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Card title=\"Site List\">\r\n            <List\r\n              bordered\r\n              dataSource={sites}\r\n              renderItem={site => <List.Item>{site.name}</List.Item>}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title={selectedCard ? selectedCard.card : ''}\r\n        visible={isModalVisible}\r\n        onCancel={handleModalClose}\r\n        footer={[\r\n          <Button key=\"close\" onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        ]}\r\n      >\r\n        {mtgStockData && (\r\n          <div>\r\n            <h2>MTG Stock Data</h2>\r\n            <pre>{JSON.stringify(mtgStockData, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        {scryfallData && (\r\n          <div>\r\n            <h2>Scryfall Data</h2>\r\n            <pre>{JSON.stringify(scryfallData, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Optimize;\r\n","export const fetchMTGStockData = async (cardName) => {\r\n    // Replace with the actual MTG Stocks API endpoint\r\n    const response = await fetch(`https://api.mtgstocks.com/v1/cards?name=${cardName}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch MTG Stocks data');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n  \r\n  export const fetchScryfallData = async (cardName) => {\r\n    const response = await fetch(`https://api.scryfall.com/cards/named?exact=${cardName}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch Scryfall data');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, Button, Form, message } from 'antd';\r\nimport { SaveOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nconst SiteManagement = () => {\r\n  const [sites, setSites] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    fetchSiteList();\r\n  }, []);\r\n\r\n  const fetchSiteList = async () => {\r\n    try {\r\n      const response = await fetch('/get_site_list');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSites(data.map(item => ({ ...item, key: item.id })));\r\n      } else {\r\n        message.error('Failed to fetch site list');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching site list:', error);\r\n      message.error('Error fetching site list');\r\n    }\r\n  };\r\n\r\n  const handleSave = async (row) => {\r\n    try {\r\n      const response = await fetch(`/update_site/${row.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(row)\r\n      });\r\n      if (response.ok) {\r\n        message.success('Site updated successfully');\r\n      } else {\r\n        message.error('Failed to update site');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating site:', error);\r\n      message.error('Error updating site');\r\n    }\r\n  };\r\n\r\n  const saveAll = async () => {\r\n    try {\r\n      const rows = await form.validateFields();\r\n      const updatedSites = sites.map(site => ({ ...site, ...rows[site.key] }));\r\n      setSites(updatedSites);\r\n      for (const site of updatedSites) {\r\n        await handleSave(site);\r\n      }\r\n      setIsEditing(false);\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    record,\r\n    children,\r\n    ...restProps\r\n  }) => {\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item\r\n            name={[record.key, dataIndex]}\r\n            style={{ margin: 0 }}\r\n            rules={[{ required: true, message: `Please Input ${title}!` }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'Name', dataIndex: 'name', key: 'name', editable: true },\r\n    { title: 'URL', dataIndex: 'url', key: 'url', editable: true },\r\n    { title: 'Parse Method', dataIndex: 'parse_method', key: 'parse_method', editable: true },\r\n    { title: 'Type', dataIndex: 'type', key: 'type', editable: true },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing,\r\n      }),\r\n    };\r\n  });\r\n\r\n  const handleEditMode = () => {\r\n    if (isEditing) {\r\n      saveAll();\r\n    } else {\r\n      // Set initial form values\r\n      const initialValues = sites.reduce((acc, site) => {\r\n        acc[site.key] = site;\r\n        return acc;\r\n      }, {});\r\n      form.setFieldsValue(initialValues);\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Site Management</h1>\r\n      <Button\r\n        type=\"primary\"\r\n        icon={isEditing ? <SaveOutlined /> : <EditOutlined />}\r\n        onClick={handleEditMode}\r\n      >\r\n        {isEditing ? 'Save All' : 'Edit Mode'}\r\n      </Button>\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          bordered\r\n          dataSource={sites}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={false}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteManagement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { List, Card } from 'antd';\r\n\r\nconst Results = () => {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/results')\r\n      .then(response => response.json())\r\n      .then(data => setResults(data))\r\n      .catch(error => console.error('Error fetching results:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Optimization Results</h1>\r\n      <List\r\n        bordered\r\n        dataSource={results}\r\n        renderItem={result => (\r\n          <List.Item>\r\n            <pre>{JSON.stringify(result, null, 2)}</pre>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Optimize from './components/Optimize';\r\nimport SiteManagement from './components/SiteManagement';\r\nimport Results from './components/Results';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\"><Link to=\"/dashboard\">Dashboard</Link></Menu.Item>\r\n            <Menu.Item key=\"2\"><Link to=\"/optimize\">Optimize</Link></Menu.Item>\r\n            <Menu.Item key=\"3\"><Link to=\"/site-management\">Site Management</Link></Menu.Item>\r\n            <Menu.Item key=\"4\"><Link to=\"/results\">Results</Link></Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/optimize\" component={Optimize} />\r\n            <Route path=\"/site-management\" component={SiteManagement} />\r\n            <Route path=\"/results\" component={Results} />\r\n          </Switch>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>MTG Scraper ©2024</Footer>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/reset.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}